env:
  JULIA_VERSION: "1"
  OPENBLAS_NUM_THREADS: 1
  GKSwstype: nul

steps:
  - label: "init project env"
    key: "init_project_env"
    command:
      - "echo $$JULIA_DEPOT_PATH"
      - "julia --project -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project -e 'using Conda; Conda.add(\"scipy=1.8.1\", channel=\"conda-forge\")'"
      - "julia --project -e 'using Conda; Conda.add(\"scikit-learn=1.1.1\")'"
      - "julia --project -e 'using Conda; Conda.add(\"matplotlib=3.7.1\")'"
    env:
      PYTHON: ""
      
    artifact_paths: 
      - "*.toml"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - wait

  - label: "Lorenz"
    key: "lorenz"
    command: |
      export PYTHON="$$JULIA_DEPOT_PATH/conda/3/x86_64/bin/python"
      export PYTHONHOME="$$JULIA_DEPOT_PATH/conda/3/x86_64/bin"
      export CONDA_JL_HOME="$$JULIA_DEPOT_PATH/conda/3/x86_64"

      mkdir examples/Lorenz/depot
      export JULIA_DEPOT_PATH="$$(pwd)/examples/Lorenz/depot:$$JULIA_DEPOT_PATH"

      julia --color=yes --project=examples/Lorenz -e '
        println("--- Developing Project")
        using Pkg;
        Pkg.develop(path=".")
        Pkg.update()
        println("--- Instantiating Project")
        Pkg.instantiate()
        println("+++ Running Lorenz")
        include("examples/Lorenz/calibrate.jl")
        include("examples/Lorenz/emulate_sample.jl")'

    artifact_paths:
      - "examples/Lorenz/output/*.png"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

