[Runs]
run_conv = true
run_dns  = true
run_bal  = true
run_reg  = true
run_onl  = true

run_acf_dns  = true
run_acf_bal  = false
run_acf_reg  = true
run_acf_onl  = true

[L96m]
; Schneider & Stuart (ESM 2.0) parameters
;K        = 36
;J        = 10
;hx       = -1.0
;hy       = 1.0
;F        = 10.0
;eps      = 0.1

; Fatkullin & Vanden-Eijnden parameters
K        = 9
J        = 8
hx       = -0.8
hy       = 1.0
F        = 10.0
eps      = 0.0078125

; number of the region with filtered integration
k0       = 5

; non-homogeneous case
hx_nonh  = false
hx_name  = gauss
hy_nonh  = true
hy_name  = gauss

[Solver]
; NON-STIFF:
; typically, you'd want to use Dormand-Prince 8(5,3): it's high-order, fast and
; uses less memory than any of the Julia methods (because dop853 is in Fortran)
; Tsit5 is a standard one
; ESERK5 has increased stability region, so instead of using stiff methods you
; can sometimes get away with this one (moderate memory and faster than stiff)
;
; STIFF:
; Rodas4 and Rodas5 are roughly the same in speed
; Rosenbrock23 is much worse as it requires more steps
SOLVER_RK = dop853
SOLVER_STIFF = Rodas5
USE_STIFF = true

RELTOL   = 1e-3
ABSTOL   = 1e-6
DTMAX    = 1e-3

[Integration]
T        = 250.0
T_conv   = 10.0
T_lrnreg = 10.0

[Online]
N_flt    = 2
T_1      = 20.0
T_2      = 20.0
T_3      = 20.0
T_4      = 20.0
T_5      = 20.0

[Plotting]
plot_GPR_reg = true
plot_GPR_flt = true
k            = 1
j            = 1

